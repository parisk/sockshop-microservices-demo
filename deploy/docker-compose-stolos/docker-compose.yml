# https://stolos.io
version: '2'

services:
  front-end:
    build: ./sockshop-front-end
    command: npm run dev
    ports:
      - 8079
    volumes:
      - ${STOLOS_REMOTE_DIR}./sockshop-front-end:/usr/src/app
    restart: always
  web:
    image: weaveworksdemos/edge-router
    ports:
      - 80
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    tmpfs:
      - /var/cache/nginx:rw,noexec,nosuid
      - /var/run:rw,noexec,nosuid
    hostname: edge-router
    restart: always
    environment:
      - reschedule=on-node-failure
  catalogue:
    image: weaveworksdemos/catalogue
    hostname: catalogue
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    environment:
      - reschedule=on-node-failure
  catalogue-db:
    image: weaveworksdemos/catalogue-db
    hostname: catalogue-db
    restart: always
    environment:
      - reschedule=on-node-failure
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_DATABASE=socksdb
  cart:
    image: weaveworksdemos/cart
    hostname: cart
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure
  cart-db:
    image: mongo
    hostname: cart-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure
  orders:
    image: weaveworksdemos/orders
    hostname: orders
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure
  orders-db:
    image: mongo
    hostname: orders-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure
  shipping:
    image: weaveworksdemos/shipping
    hostname: shipping
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure
  queue-master:
    image: weaveworksdemos/queue-master
    hostname: queue-master
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure
  rabbitmq:
    image: rabbitmq:3
    hostname: rabbitmq
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    environment:
      - reschedule=on-node-failure
  payment:
    image: weaveworksdemos/payment
    hostname: payment
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    environment:
      - reschedule=on-node-failure
  user:
    image: weaveworksdemos/user
    hostname: user
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    environment:
      - MONGO_HOST=user-db:27017
      - reschedule=on-node-failure
  user-db:
    image: weaveworksdemos/user-db
    hostname: user-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - reschedule=on-node-failure
  # user-sim:
  #   image: weaveworksdemos/load-test
  #   cap_drop:
  #     - all
  #   hostname: user-simulator
  #   command: "-d 60 -r 200 -c 2 -h edge-router"
  wishlist:
    build: ./sockshop-wishlist
    command: make dev
    environment:
      - PORT=80
      - ALLOWED_HOSTS=wishlist,localhost,$STOLOS_PUBLIC_URL_WISHLIST,$STOLOS_PUBLIC_URL_WISHLIST_80
    ports:
      - 80
    volumes:
      - ${STOLOS_REMOTE_DIR}./sockshop-wishlist:/usr/src/app
    restart: always
